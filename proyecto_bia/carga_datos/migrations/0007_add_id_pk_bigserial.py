# Generated by Django 5.1.7 on 2025-08-23 17:38

from django.db import migrations, models

ADD_ID_SQL = """
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_schema='public' AND table_name='db_bia' AND column_name='id'
    ) THEN
        ALTER TABLE public.db_bia ADD COLUMN id bigserial;
    END IF;
END$$;
"""

DROP_OLD_PK_SQL = """
DO $$
DECLARE pk_name text;
BEGIN
    SELECT tc.constraint_name INTO pk_name
    FROM information_schema.table_constraints tc
    WHERE tc.table_schema='public'
      AND tc.table_name='db_bia'
      AND tc.constraint_type='PRIMARY KEY';
    IF pk_name IS NOT NULL THEN
        -- ðŸ”´ IMPORTANTE: usar CASCADE para soltar FKs dependientes (certificate_client_id_...)
        EXECUTE format('ALTER TABLE public.db_bia DROP CONSTRAINT %I CASCADE', pk_name);
    END IF;
END$$;
"""

ADD_NEW_PK_SQL = "ALTER TABLE public.db_bia ADD CONSTRAINT db_bia_pkey PRIMARY KEY (id);"
DROP_NEW_PK_SQL = "ALTER TABLE public.db_bia DROP CONSTRAINT IF EXISTS db_bia_pkey;"
DROP_ID_SQL     = "ALTER TABLE public.db_bia DROP COLUMN IF EXISTS id;"

class Migration(migrations.Migration):

    dependencies = [
        ('carga_datos', '0006_basededatosbia_creditos_and_more'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(ADD_ID_SQL, reverse_sql=DROP_ID_SQL),
                migrations.RunSQL(DROP_OLD_PK_SQL, reverse_sql=migrations.RunSQL.noop),
                migrations.RunSQL(ADD_NEW_PK_SQL, reverse_sql=DROP_NEW_PK_SQL),
            ],
            state_operations=[
                migrations.AddField(
                    model_name='basededatosbia',
                    name='id',
                    field=models.BigAutoField(primary_key=True, serialize=False),
                ),
            ],
        ),
    ]

